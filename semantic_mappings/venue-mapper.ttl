@prefix rr: <http://www.w3.org/ns/r2rml#>.
@prefix rml: <http://semweb.mmlab.be/ns/rml#>.
@prefix ql: <http://semweb.mmlab.be/ns/ql#>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix schema: <http://schema.org/>.
@prefix wgs84_pos: <http://www.w3.org/2003/01/geo/wgs84_pos#lat>.
@prefix gn: <http://www.geonames.org/ontology#>.
@prefix core: <https://w3id.org/mdo/core/>.
@prefix structure: <https://w3id.org/mdo/structure/>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix calculation: <https://w3id.org/mdo/calculation/>.
@prefix prov: <http://www.w3.org/ns/prov#>.
@prefix provenance: <https://w3id.org/mdo/provenance/>.
@prefix emmo: <http://emmo.info/domains/emmo-material.owl#>.
@prefix CHEBI-atom: <http://purl.obolibrary.org/obo/CHEBI_33250>.
@prefix CHEBI-formula: <http://purl.obolibrary.org/obo/chebi/formula>.
@prefix QUDT-Unit: <http://qudt.org/vocab/unit/>.
@prefix QUDT: <http://qudt.org/schema/qudt#>.
@base <http://example.com/ns#>.



<VenueMapping>
  rml:logicalSource [
    rml:source "oqmd-data/Venue.json";
    rml:referenceFormulation ql:JSONPath;
    rml:iterator "$"
  ];

  rr:subjectMap [
    rr:template "http://loc.example.com/city/{location.city}";
    rr:class schema:City
  ];

  rr:predicateObjectMap [
    rr:predicate wgs84_pos:lat;
    rr:objectMap [
      rml:reference "venue.latitude"
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate wgs84_pos:long;
    rr:objectMap [
      rml:reference "venue.longitude"
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate gn:countryCode;
    rr:objectMap [
      rml:reference "location.country"
    ]
  ].

  
<OQMDSource>
    rml:source "oqmd-data/oqmd-1.json";
    rml:referenceFormulation ql:JSONPath;
    rml:iterator "$"
.

<OQMD_Calculation_Mapping>
  rml:logicalSource <OQMDSource>;
  rr:subjectMap [
    rr:template "http://example.com/oqmd/{data[0].formationenergy_id}/Calculation";
    rr:class core:Calculation
  ];
  rr:predicateObjectMap [
    rr:predicate core:ID;
    rr:objectMap [
      rml:reference "data[0].formationenergy_id";
      rr:datatype xsd:string
    ]
  ];
  rr:predicateObjectMap [
    rr:predicate core:hasOutputStructure;
    rr:objectMap [
      rr:parentTriplesMap <OQMD_Structure_Mapping>
    ]
  ];
  rr:predicateObjectMap [
    rr:predicate core:hasOutputCalculatedProperty;
    rr:objectMap [
      rr:parentTriplesMap <OQMD_Output_BandGap_Mapping>
    ]
  ];
  .

<OQMD_Structure_Mapping>
    rml:logicalSource <OQMDSource>;
    rr:subjectMap [
        rr:template "http://example.com/oqmd/{data[0].formationenergy_id}/Output_Structure" ;
        rr:class core:Structure
    ];
    rr:predicateObjectMap [
        rr:predicate structure:hasComposition;
        rr:objectMap[
            rr:parentTriplesMap <OQMD_Composition_Mapping>
        ]
    ];
    rr:predicateObjectMap [
        rr:predicate structure:hasLattice;
        rr:objectMap[
            rr:parentTriplesMap <OQMD_Lattice_Mapping>
        ]
    ];
    rr:predicateObjectMap [
        rr:predicate structure:hasSpaceGroup;
        rr:objectMap[
            rr:parentTriplesMap <OQMD_SpaceGroup_Mapping>
        ]
    ]
    .

<OQMD_Composition_Mapping>
    rml:logicalSource <OQMDSource>;
    rr:subjectMap [
        rr:template "http://example.com/oqmd/{data[0].formationenergy_id}/Output_Composition" ;
        rr:class structure:Composition
    ];
    rr:predicateObjectMap [
        rr:predicate structure:ReducedFormula;
        rr:objectMap [
            rml:reference "data[0].name";
            rr:datatype xsd:string
        ]
    ];
    rr:predicateObjectMap [
        rr:predicate structure:AnonymousFormula;
        rr:objectMap [
            rml:reference "data[0].composition_generic";
            rr:datatype xsd:string
        ]
    ].

<OQMD_Lattice_Mapping>
    rml:logicalSource <OQMDSource>;
    rr:subjectMap [
        rr:template "http://example.com/oqmd/{data[0].formationenergy_id}/Output_Lattice" ;
        rr:class structure:Lattice
    ];
    rr:predicateObjectMap [
        rr:predicate structure:LatticeVolume;
        rr:objectMap [
            rml:reference "data[0].volume";
            rr:datatype xsd:float
        ]
    ].

<OQMD_SpaceGroup_Mapping>
    rml:logicalSource <OQMDSource>;
    rr:subjectMap [
        rr:template "http://example.com/oqmd/{data[0].formationenergy_id}/Output_Space_Group";
        rr:class structure:SpaceGroup
    ];
    rr:predicateObjectMap [
        rr:predicate structure:SpaceGroupSymbol;
        rr:objectMap [
            rml:reference "data[0].spacegroup";
            rr:datatype xsd:string
        ]
    ].

<OQMD_Output_BandGap_Mapping>
    rml:logicalSource <OQMDSource>;
    rr:subjectMap [
        rr:template "http://example.com/oqmd/{data[0].formationenergy_id}/Output_BandGap";
        rr:class core:CalculatedProperty
    ];
    rr:predicateObjectMap[ 
        rr:predicate QUDT:quantityValue;
        rr:objectMap [
            rr:parentTriplesMap <OQMD_Output_BandGap_QuantityValue_Mapping>
        ]
    ];
    rr:predicateObjectMap [
        rr:predicate structure:PropertyName;
        rr:objectMap [
            rr:constant "band_gap";
            rr:datatype xsd:string
        ]
    ];
    rr:predicateObjectMap[
        rr:predicate rdfs:SubClassOf;
        rr:objectMap[
            rr:template "http://example.com/oqmd/{data[0].formationenergy_id}/Output_CalculatedProperty";
            rr:class core:Property
        ]
    ]
    .

<OQMD_Output_DeltaEnergy_Mapping>
    rml:logicalSource <OQMDSource>;
    rr:subjectMap [
        rr:template "http://example.com/oqmd/{data[0].formationenergy_id}/Output_DeltaEnergy";
        rr:class core:CalculatedProperty
    ];
    rr:predicateObjectMap[ 
        rr:predicate QUDT:quantityValue;
        rr:objectMap [
            rr:parentTriplesMap <OQMD_Output_DeltaEnergy_QuantityValue_Mapping>
        ]
    ];
    rr:predicateObjectMap [
        rr:predicate structure:PropertyName;
        rr:objectMap [
            rr:constant "delta_energy";
            rr:datatype xsd:string
        ]
    ];
    rr:predicateObjectMap[
        rr:predicate rdfs:SubClassOf;
        rr:objectMap[
            rr:template "http://example.com/oqmd/{data[0].formationenergy_id}/Output_CalculatedProperty";
            rr:class core:Property
        ]
    ]
    .
<OQMD_Output_DeltaEnergy_QuantityValue_Mapping>
    rml:logicalSource <OQMDSource>;
    rr:subjectMap [
        rr:template "http://example.com/oqmd/{data[0].formationenergy_id}/Output_DeltaEnergy_QuantityValue";
        rr:class QUDT:QuantityValue
    ];
    rr:predicateObjectMap[
        rr:predicate QUDT:numericValue;
        rr:objectMap[
            rml:reference "data[0].delta_e";
            rr:datatype xsd:float
        ]
    ];
    rr:predicateObjectMap[
        rr:predicate QUDT:unit;
        rr:objectMap[
            rr:parentTriplesMap <OQMD_Energy_Unit_Mapping>
        ]
    ]
    .
<OQMD_Energy_Unit_Mapping>
    rml:logicalSource <OQMDSource>;
    rr:subjectMap [
        rr:template "http://example.com/QUDT/Unit";
        rr:class QUDT:Unit
    ];
    rr:predicateObjectMap[
        rr:predicate QUDT:symbol;
        rr:objectMap[
            rr:constant QUDT-Unit:EV;
            rr:datatype xsd:string
        ]
    ].


<OQMD_Output_BandGap_QuantityValue_Mapping>
    rml:logicalSource <OQMDSource>;
    rr:subjectMap [
        rr:template "http://example.com/oqmd/{data[0].formationenergy_id}/Output_BandGap_QuantityValue";
        rr:class QUDT:QuantityValue
    ];
    rr:predicateObjectMap[
        rr:predicate QUDT:numericValue;
        rr:objectMap[
            rml:referencezdata[0].band_gap";
            rr:datatype xsd:float
        ]
    ];
    rr:predicateObjectMap[
        rr:predicate QUDT:unit;
        rr:objectMap[
            rr:constant QUDT-Unit:EV;
            rr:datatype xsd:string
        ]
    ]
    .